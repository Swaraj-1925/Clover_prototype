plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.compose.compiler)
    alias(libs.plugins.kotlin.serialization)
    id 'com.google.dagger.hilt.android'
    id "dagger.hilt.android.plugin"
    id 'kotlin-kapt'
}

android {
    namespace 'com.clovermusic.clover'
    compileSdk 34

    defaultConfig {
        applicationId "com.clovermusic.clover"
        minSdk 30
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

//        Spotify redirect url
        manifestPlaceholders = [redirectSchemeName: "clovermusicapp", redirectHostName: "callback"]


//        Api keys

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        buildConfigField "String", "SPOTIFY_CLIENT_ID", "\"${properties.getProperty("spotifyClientID")}\""
        buildConfigField "String", "SPOTIFY_CLIENT_SECRET", "\"${properties.getProperty("spotifyClientSecret")}\""

        buildFeatures { buildConfig = true }


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {


    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

//    Icon
    implementation libs.material.icons.extended
//    Hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose

//    Spotify
    implementation files("../app-remote-lib/spotify-app-remote-release-0.8.0.aar")
    implementation libs.auth
    implementation libs.gson

//    Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson

//    okhttp3
    implementation libs.okhttp

//    Coil
    implementation libs.coil.compose

//    life Cycle
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.lifecycle.viewmodel.ktx

//    Shared preferences
    implementation libs.androidx.security.crypto
//    Coroutines
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.core

//    Pager Layouts
    implementation libs.accompanist.pager
    implementation libs.accompanist.pager.indicators

//    palette for dominate color
    implementation libs.androidx.palette.ktx

//    Lottie for loading animation
    implementation libs.lottie.compose

//    Navigation
    implementation libs.navigation.compose
    implementation libs.kotlinx.serialization.json

// pull down Refresh
    implementation libs.accompanist.swiperefresh


//    ExoPlayer
//    implementation libs.androidx.media3.exoplayer
//    implementation libs.media3.session
//    implementation libs.androidx.media3.ui

    // Room
    implementation libs.androidx.room.ktx
    kapt libs.androidx.room.compiler
    implementation libs.androidx.room.paging

}
kapt {
    correctErrorTypes true
}